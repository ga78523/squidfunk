{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"SL/Balistique/","text":"Balistique 1] Contexte Une pierre a \u00e9t\u00e9 retrouv\u00e9e \u00e0 l\u2019int\u00e9rieur de l\u2019appartement de M. Gerard Manfin. La pierre a-t-elle pu \u00eatre envoy\u00e9e de l\u2019ext\u00e9rieur ? 2] \u00c9tude physique (param\u00e9trage) et mise en \u00e9quation L\u2019appartement de M. Manfin se trouve au troisi\u00e8me \u00e9tage de l\u2019immeuble, \u00e0 une hauteur de 9 m. Devant l\u2019immeuble se trouve une haie de 1 m de haut, si bien qu\u2019il n\u2019est pas possible de s\u2019approcher \u00e0 moins de 1,50 m de l\u2019immeuble. Faire un sch\u00e9ma \u00e0 l\u2019\u00e9chelle de la situation. On prendra pour cela un homme de taille moyenne de 1,7 m. On souhaite ensuite param\u00e9trer le mouvement de la pierre, c\u2019est-\u00e0-dire modifier les caract\u00e9ristiques du mouvement. Pour cela, on ajoute un rep\u00e8re (appel\u00e9 \"r\u00e9f\u00e9rentiel\" en physique) pour rep\u00e9rer la position (x ; y) de la pierre \u00e0 chaque instant. On choisira comme origine O des axes l\u2019endroit o\u00f9 le lancer l\u00e2che la pierre. On ajoutera un axe (Ox) horizontal et un axe (Oy) vertical. Ajouter ce rep\u00e8re au sch\u00e9ma pr\u00e9c\u00e9dent. Quels sont selon vous les param\u00e8tres qui vont influencer la trajectoire de la pierre ? On v\u00e9rifiera ces hypoth\u00e8ses dans la partie math\u00e9matique. En utilisant les lois de la physique, on trouve l\u2019expression des coordonn\u00e9es (x, y) de la pierre en fonction du temps t : x = v_0 \\times cos(\\alpha) \\times t y = \u2212\\dfrac{1}{2}\\times g \\times t^{2} + v0 \u00d7sin(\\alpha) \\times t et o\u00f9 g = 9,81 m.s 2 est une constante, $v_0$ la vitesse initiale et \u03b1 l\u2019angle avec lequel a \u00e9t\u00e9 lanc\u00e9 la pierre. 3] \u00c9tude math\u00e9matique de l\u2019\u00e9quation Pour pouvoir tracer la trajectoire, il faut une expression o\u00f9 y est exprim\u00e9e en fonction de x : A l\u2019aide de la premi\u00e8re \u00e9quation physique, exprimer t en fonction de x. Remplacer t par l\u2019expression trouv\u00e9e, dans la seconde \u00e9quation, pour obtenir : y = \u2212 \\dfrac{g}{2v_0 ^{2}} \\times cos(\\alpha)^{2} + tan(\\alpha) \\times x L\u2019\u00e9quation obtenue est celle d\u2019une fonction dite \"trin\u00f4me du second degr\u00e9\". L\u2019allure g\u00e9n\u00e9rale de ce type de courbe est une parabole, comme pour la fonction carr\u00e9, mais \u00e0 \"l\u2019envers\". Dessiner au crayon de papier l\u2019allure de cette trajectoire sur votre sch\u00e9ma, placer l\u2019angle \u03b1. Les questions suivantes servent \u00e0 v\u00e9rifier votre intuition. Trac\u00e9 sur GeoGebra (a) Cr\u00e9er une constante $g = 9,81 m.s^{-2}$ en entrant simplement cette \u00e9galit\u00e9 dans la ligne de saisie ; (b) Cr\u00e9er deux curseurs appel\u00e9s $\\alpha$ et $v_0$ correspondant respectivement \u00e0 l\u2019angle de lancer et la vitesse initiale fournie \u00e0 la pierre. (largeur des curseurs : 400) ; (c) Entrer l\u2019\u00e9quation obtenue en 2 dans la ligne de saisie et r\u00e9gler le zoom pour n\u2019afficher que la partie de la courbe qui est au-dessus de l\u2019axe des abscisses. { loading=lazy } Influence de l\u2019angle initial (a) On fixe une vitesse initiale de 15 $ m.s^{-1}$. Tracer les trajectoires correspondant \u00e0 des angles de lancer de 30\u00b0, 40\u00b0, 45\u00b0, 55\u00b0; (b) L\u2019angle initial a -t-il une influence sur la distance ? (c) On suppose la pierre lanc\u00e9e avec une vitesse initiale de 10 $m.s^{-1}$. Sous quel angle la lancer pour qu\u2019elle aille le plus loin possible ? Le plus haut possible ? Influence des autres param\u00e8tres (a) Comment d\u00e9terminer l\u2019influence de la vitesse initiale ? (b) D\u2019apr\u00e8s les \u00e9quations, la masse a-t-elle une influence ? (c) D\u2019apr\u00e8s les \u00e9quations, la force a-t-elle une influence ? Des trajectoires particuli\u00e8res (a) Tracer les trajectoires correspondant \u00e0 des angles de lancer de 30\u00b0et de 60\u00b0, avec une m\u00eame vitesse initiale de 15 $m.s^{-1}$ ; (b) Que remarque-t-on ? (c) Et pour un angle de 20\u00b0? de 40\u00b0? Monsieur Manfin habite au troisi\u00e8me \u00e9tage, \u00e0 9 m de hauteur. Proposer \u00e0 l\u2019aide de GeoGebra des angles et vitesses initiales permettant d\u2019envoyer la pierre \u00e0 cette hauteur. Un \u00eatre humain moyen peut fournir une vitesse initiale maximale d\u2019environ 12 m.s-1 (le record du monde \u00e9tant de 14 m.s-1). Conclure quant \u00e0 la plausibilit\u00e9 que la pierre ait \u00e9t\u00e9 lanc\u00e9e de l\u2019ext\u00e9rieur par la fen\u00eatre. Proposer des hypoth\u00e8ses sur la pr\u00e9sence de la pierre retrouv\u00e9es.","title":"Balistique"},{"location":"SL/Balistique/#balistique","text":"","title":"Balistique"},{"location":"SL/Balistique/#1-contexte","text":"Une pierre a \u00e9t\u00e9 retrouv\u00e9e \u00e0 l\u2019int\u00e9rieur de l\u2019appartement de M. Gerard Manfin. La pierre a-t-elle pu \u00eatre envoy\u00e9e de l\u2019ext\u00e9rieur ?","title":"1] Contexte"},{"location":"SL/Balistique/#2-etude-physique-parametrage-et-mise-en-equation","text":"L\u2019appartement de M. Manfin se trouve au troisi\u00e8me \u00e9tage de l\u2019immeuble, \u00e0 une hauteur de 9 m. Devant l\u2019immeuble se trouve une haie de 1 m de haut, si bien qu\u2019il n\u2019est pas possible de s\u2019approcher \u00e0 moins de 1,50 m de l\u2019immeuble. Faire un sch\u00e9ma \u00e0 l\u2019\u00e9chelle de la situation. On prendra pour cela un homme de taille moyenne de 1,7 m. On souhaite ensuite param\u00e9trer le mouvement de la pierre, c\u2019est-\u00e0-dire modifier les caract\u00e9ristiques du mouvement. Pour cela, on ajoute un rep\u00e8re (appel\u00e9 \"r\u00e9f\u00e9rentiel\" en physique) pour rep\u00e9rer la position (x ; y) de la pierre \u00e0 chaque instant. On choisira comme origine O des axes l\u2019endroit o\u00f9 le lancer l\u00e2che la pierre. On ajoutera un axe (Ox) horizontal et un axe (Oy) vertical. Ajouter ce rep\u00e8re au sch\u00e9ma pr\u00e9c\u00e9dent. Quels sont selon vous les param\u00e8tres qui vont influencer la trajectoire de la pierre ? On v\u00e9rifiera ces hypoth\u00e8ses dans la partie math\u00e9matique. En utilisant les lois de la physique, on trouve l\u2019expression des coordonn\u00e9es (x, y) de la pierre en fonction du temps t : x = v_0 \\times cos(\\alpha) \\times t y = \u2212\\dfrac{1}{2}\\times g \\times t^{2} + v0 \u00d7sin(\\alpha) \\times t et o\u00f9 g = 9,81 m.s 2 est une constante, $v_0$ la vitesse initiale et \u03b1 l\u2019angle avec lequel a \u00e9t\u00e9 lanc\u00e9 la pierre.","title":"2] \u00c9tude physique (param\u00e9trage) et mise en \u00e9quation"},{"location":"SL/Balistique/#3-etude-mathematique-de-lequation","text":"Pour pouvoir tracer la trajectoire, il faut une expression o\u00f9 y est exprim\u00e9e en fonction de x : A l\u2019aide de la premi\u00e8re \u00e9quation physique, exprimer t en fonction de x. Remplacer t par l\u2019expression trouv\u00e9e, dans la seconde \u00e9quation, pour obtenir : y = \u2212 \\dfrac{g}{2v_0 ^{2}} \\times cos(\\alpha)^{2} + tan(\\alpha) \\times x L\u2019\u00e9quation obtenue est celle d\u2019une fonction dite \"trin\u00f4me du second degr\u00e9\". L\u2019allure g\u00e9n\u00e9rale de ce type de courbe est une parabole, comme pour la fonction carr\u00e9, mais \u00e0 \"l\u2019envers\". Dessiner au crayon de papier l\u2019allure de cette trajectoire sur votre sch\u00e9ma, placer l\u2019angle \u03b1. Les questions suivantes servent \u00e0 v\u00e9rifier votre intuition. Trac\u00e9 sur GeoGebra (a) Cr\u00e9er une constante $g = 9,81 m.s^{-2}$ en entrant simplement cette \u00e9galit\u00e9 dans la ligne de saisie ; (b) Cr\u00e9er deux curseurs appel\u00e9s $\\alpha$ et $v_0$ correspondant respectivement \u00e0 l\u2019angle de lancer et la vitesse initiale fournie \u00e0 la pierre. (largeur des curseurs : 400) ; (c) Entrer l\u2019\u00e9quation obtenue en 2 dans la ligne de saisie et r\u00e9gler le zoom pour n\u2019afficher que la partie de la courbe qui est au-dessus de l\u2019axe des abscisses. { loading=lazy } Influence de l\u2019angle initial (a) On fixe une vitesse initiale de 15 $ m.s^{-1}$. Tracer les trajectoires correspondant \u00e0 des angles de lancer de 30\u00b0, 40\u00b0, 45\u00b0, 55\u00b0; (b) L\u2019angle initial a -t-il une influence sur la distance ? (c) On suppose la pierre lanc\u00e9e avec une vitesse initiale de 10 $m.s^{-1}$. Sous quel angle la lancer pour qu\u2019elle aille le plus loin possible ? Le plus haut possible ? Influence des autres param\u00e8tres (a) Comment d\u00e9terminer l\u2019influence de la vitesse initiale ? (b) D\u2019apr\u00e8s les \u00e9quations, la masse a-t-elle une influence ? (c) D\u2019apr\u00e8s les \u00e9quations, la force a-t-elle une influence ? Des trajectoires particuli\u00e8res (a) Tracer les trajectoires correspondant \u00e0 des angles de lancer de 30\u00b0et de 60\u00b0, avec une m\u00eame vitesse initiale de 15 $m.s^{-1}$ ; (b) Que remarque-t-on ? (c) Et pour un angle de 20\u00b0? de 40\u00b0? Monsieur Manfin habite au troisi\u00e8me \u00e9tage, \u00e0 9 m de hauteur. Proposer \u00e0 l\u2019aide de GeoGebra des angles et vitesses initiales permettant d\u2019envoyer la pierre \u00e0 cette hauteur. Un \u00eatre humain moyen peut fournir une vitesse initiale maximale d\u2019environ 12 m.s-1 (le record du monde \u00e9tant de 14 m.s-1). Conclure quant \u00e0 la plausibilit\u00e9 que la pierre ait \u00e9t\u00e9 lanc\u00e9e de l\u2019ext\u00e9rieur par la fen\u00eatre. Proposer des hypoth\u00e8ses sur la pr\u00e9sence de la pierre retrouv\u00e9es.","title":"3] \u00c9tude math\u00e9matique de l\u2019\u00e9quation"},{"location":"SL/sujet%207/","text":"sujet 7 Exercice 1 On s\u2019int\u00e9resse \u00e0 la suite d\u2019entiers d\u00e9finie par U1 = 1, U2 = 1 et, pour tout entier naturel n, par Un+2 = Un+1 + Un . Elle s\u2019appelle la suite de Fibonnaci. \u00c9crire la fonction fibonacci qui prend un entier n > 0 et qui renvoie l\u2019\u00e9l\u00e9ment d\u2019indice n de cette suite. On utilisera une programmation dynamique (pas de r\u00e9cursivit\u00e9). Exemples : >>> fibonacci(1) 1 >>> fibonacci(2) 1 >>> fibonacci(25) 75025 >>> fibonacci(45) 1134903170 Exercice 2 Les variables liste_eleves et liste_notes ayant \u00e9t\u00e9 pr\u00e9alablement d\u00e9finies et \u00e9tant de m\u00eame longueur, la fonction meilleures_notes renvoie la note maximale qui a \u00e9t\u00e9 attribu\u00e9e, le nombre d\u2019\u00e9l\u00e8ves ayant obtenu cette note et la liste des noms de ces \u00e9l\u00e8ves. Compl\u00e9ter le code Python de la fonction meilleures_notes ci-dessous. liste_eleves = ['a','b','c','d','e','f','g','h','i','j'] liste_notes = [1, 40, 80, 60, 58, 80, 75, 80, 60, 24] def meilleures_notes(): note_maxi = 0 nb_eleves_note_maxi = ... liste_maxi = ... for compteur in range(...): if liste_notes[compteur] == ...: nb_eleves_note_maxi = nb_eleves_note_maxi + 1 liste_maxi.append(liste_eleves[...]) if liste_notes[compteur] > note_maxi: note_maxi = liste_notes[compteur] nb_eleves_note_maxi = ... liste_maxi = [...] return (note_maxi,nb_eleves_note_maxi,liste_maxi) Une fois compl\u00e9t\u00e9, le code ci-dessus donne >>> meilleures_notes() (80, 3, ['c', 'f', 'h'])","title":"sujet 7"},{"location":"SL/sujet%207/#sujet-7","text":"","title":"sujet 7"},{"location":"SL/sujet%207/#exercice-1","text":"On s\u2019int\u00e9resse \u00e0 la suite d\u2019entiers d\u00e9finie par U1 = 1, U2 = 1 et, pour tout entier naturel n, par Un+2 = Un+1 + Un . Elle s\u2019appelle la suite de Fibonnaci. \u00c9crire la fonction fibonacci qui prend un entier n > 0 et qui renvoie l\u2019\u00e9l\u00e9ment d\u2019indice n de cette suite. On utilisera une programmation dynamique (pas de r\u00e9cursivit\u00e9). Exemples : >>> fibonacci(1) 1 >>> fibonacci(2) 1 >>> fibonacci(25) 75025 >>> fibonacci(45) 1134903170","title":"Exercice 1"},{"location":"SL/sujet%207/#exercice-2","text":"Les variables liste_eleves et liste_notes ayant \u00e9t\u00e9 pr\u00e9alablement d\u00e9finies et \u00e9tant de m\u00eame longueur, la fonction meilleures_notes renvoie la note maximale qui a \u00e9t\u00e9 attribu\u00e9e, le nombre d\u2019\u00e9l\u00e8ves ayant obtenu cette note et la liste des noms de ces \u00e9l\u00e8ves. Compl\u00e9ter le code Python de la fonction meilleures_notes ci-dessous. liste_eleves = ['a','b','c','d','e','f','g','h','i','j'] liste_notes = [1, 40, 80, 60, 58, 80, 75, 80, 60, 24] def meilleures_notes(): note_maxi = 0 nb_eleves_note_maxi = ... liste_maxi = ... for compteur in range(...): if liste_notes[compteur] == ...: nb_eleves_note_maxi = nb_eleves_note_maxi + 1 liste_maxi.append(liste_eleves[...]) if liste_notes[compteur] > note_maxi: note_maxi = liste_notes[compteur] nb_eleves_note_maxi = ... liste_maxi = [...] return (note_maxi,nb_eleves_note_maxi,liste_maxi) Une fois compl\u00e9t\u00e9, le code ci-dessus donne >>> meilleures_notes() (80, 3, ['c', 'f', 'h'])","title":"Exercice 2"},{"location":"TNSI/API_web_eleve/","text":"API WEB : Openrouteservice I] API API signifie \"Application Programming Interface\". En d'autres termes, c'est un moyen mis en place par une application pour que d'autres applications puissent int\u00e9ragir simplement avec elle. Tout comme les biblioth\u00e8ques, il existe de tr\u00e8s nombreuses API. Nous allons nous int\u00e9resser plus particuli\u00e8rement l'API Openrouteservice. Il s'agit d'un service de routage bas\u00e9 sur les donn\u00e9es ouvertes OpenStreetMap. Voici l'adresse du site : https://openrouteservice.org II] Utilisation de l'API Prenons un exemple de la vie courante : \"Nous cherchons un appartement situ\u00e9 \u00e0 chaumont situ\u00e9 \u00e0 moins de 30 minutes \u00e0 pieds du centre\". Pour cela, nous allons tracer des isochrones sur une plage de 5 min \u00e0 partir de la mairie. Remarque : une isochrone est une ligne situ\u00e9 \u00e0 une distance ou \u00e0 un temps donn\u00e9 d'un point origine Dans un premier temps, on peut se familiariser avec les fonctionnalit\u00e9s disponibles sur le site internet proposant l'API. Le menu \u00e0 gauche permet de saisir et d'exploiter diff\u00e9rents options. Pour poursuivre , il faut cr\u00e9er un compte sur le site afin d'obtenir une cl\u00e9 permettant d'utiliser l'API. Maintenant, il faut se familiariser directement avec les param\u00e8tres de l'API via l'interface suivante : https://openrouteservice.org/dev/#/api-docs/v2/isochrones/%7Bprofile%7D/post Apr\u00e8s avoir analys\u00e9 tout cela,et notamment la rubrique \"Show example code\", et s\u00e9lectionn\u00e9 la cat\u00e9gorie Python, on s'aper\u00e7oit qu'on peut utliser cette API. Effectivement le programme python envoie un formulaire HTML contenant les param\u00e8tres fix\u00e9s dans un fichier qui ressemble \u00e0 un dictionnaire qui est en fait un fichier JSON. Une fois ce formulaire envoy\u00e9, on obtient en retour une r\u00e9ponse \u00e9galement sous la forme de donn\u00e9es JSON. Il faut donc \u00eatre capable d'envoyer une requ\u00eate HTML. Pour cela, on va utiliser le module requests . Si on souhaite avoir un retour visuel avec en fond de carte, les donn\u00e9es d'OpenStreetMap. Nous utiliserons pour cela la biblioth\u00e8que folium . Commen\u00e7ons donc par installer ces modules et biblioth\u00e8que. pip install folium pip install requests Maintenant copier le programme suivant dans votre \u00e9diteur: import json import folium import requests tab_couleurs=[\"#0e7c0a\",\"#c1ff00\",\"#e1d219\",\"#e1ba19\",\"#e17d19\",\"#ff0000\"] # adresse de la mairie de Chaumont coord_depart = (48.111006, 5.139613) temps_max = 1800 #soit 30 min intervalle_temps = 300 #soit 5 min #l'API utilise des coordonn\u00e9es avec la longitude avant la latitude coord = [coord_depart[1],coord_depart[0]] body = {\"locations\":[coord], \"range\":[temps_max], \"attributes\":[\"area\"], \"interval\":intervalle_temps, \"location_type\":\"start\", \"range_type\":\"time\" ,\"area_units\":\"m\"} headers = { 'Accept': 'application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8', 'Authorization': 'yourToken', 'Content-Type': 'application/json; charset=utf-8' } call = requests.post('https://api.openrouteservice.org/v2/isochrones/foot-walking', json=body, headers=headers) print(call.status_code, call.reason) print(call.text) geo=call.text with open('datas.json','w') as f: f.write(geo) with open('datas.json','r') as f: datas=json.load(f) folium_map = folium.Map(location=coord_depart,zoom_start=14) folium.Marker(coord_depart,popup=\"Mairie\").add_to(folium_map) i=0 for zone in datas[\"features\"]: valeur_tps = zone[\"properties\"][\"value\"] print(valeur_tps) path_list=[(y,x) for x,y in zone[\"geometry\"][\"coordinates\"][0]] folium.Polygon(path_list,color=tab_couleurs[i]).add_to(folium_map) i=i+1 folium_map.save('map.appart.html') III] Exercices R\u00e9aliser les deux exercices suivants sous Jupyter tout en justifiant les parties de code. Rechercher les isochrones autour du lyc\u00e9e situ\u00e9 \u00e0 40 min et par pas de 10 min. Ensuite, utiliser l'API d'une autre mani\u00e8re qu'avec les isochrones.","title":"TNSI"},{"location":"TNSI/API_web_eleve/#api-web-openrouteservice","text":"","title":"API WEB : Openrouteservice"},{"location":"TNSI/API_web_eleve/#i-api","text":"API signifie \"Application Programming Interface\". En d'autres termes, c'est un moyen mis en place par une application pour que d'autres applications puissent int\u00e9ragir simplement avec elle. Tout comme les biblioth\u00e8ques, il existe de tr\u00e8s nombreuses API. Nous allons nous int\u00e9resser plus particuli\u00e8rement l'API Openrouteservice. Il s'agit d'un service de routage bas\u00e9 sur les donn\u00e9es ouvertes OpenStreetMap. Voici l'adresse du site : https://openrouteservice.org","title":"I] API"},{"location":"TNSI/API_web_eleve/#ii-utilisation-de-lapi","text":"Prenons un exemple de la vie courante : \"Nous cherchons un appartement situ\u00e9 \u00e0 chaumont situ\u00e9 \u00e0 moins de 30 minutes \u00e0 pieds du centre\". Pour cela, nous allons tracer des isochrones sur une plage de 5 min \u00e0 partir de la mairie. Remarque : une isochrone est une ligne situ\u00e9 \u00e0 une distance ou \u00e0 un temps donn\u00e9 d'un point origine Dans un premier temps, on peut se familiariser avec les fonctionnalit\u00e9s disponibles sur le site internet proposant l'API. Le menu \u00e0 gauche permet de saisir et d'exploiter diff\u00e9rents options. Pour poursuivre , il faut cr\u00e9er un compte sur le site afin d'obtenir une cl\u00e9 permettant d'utiliser l'API. Maintenant, il faut se familiariser directement avec les param\u00e8tres de l'API via l'interface suivante : https://openrouteservice.org/dev/#/api-docs/v2/isochrones/%7Bprofile%7D/post Apr\u00e8s avoir analys\u00e9 tout cela,et notamment la rubrique \"Show example code\", et s\u00e9lectionn\u00e9 la cat\u00e9gorie Python, on s'aper\u00e7oit qu'on peut utliser cette API. Effectivement le programme python envoie un formulaire HTML contenant les param\u00e8tres fix\u00e9s dans un fichier qui ressemble \u00e0 un dictionnaire qui est en fait un fichier JSON. Une fois ce formulaire envoy\u00e9, on obtient en retour une r\u00e9ponse \u00e9galement sous la forme de donn\u00e9es JSON. Il faut donc \u00eatre capable d'envoyer une requ\u00eate HTML. Pour cela, on va utiliser le module requests . Si on souhaite avoir un retour visuel avec en fond de carte, les donn\u00e9es d'OpenStreetMap. Nous utiliserons pour cela la biblioth\u00e8que folium . Commen\u00e7ons donc par installer ces modules et biblioth\u00e8que. pip install folium pip install requests Maintenant copier le programme suivant dans votre \u00e9diteur: import json import folium import requests tab_couleurs=[\"#0e7c0a\",\"#c1ff00\",\"#e1d219\",\"#e1ba19\",\"#e17d19\",\"#ff0000\"] # adresse de la mairie de Chaumont coord_depart = (48.111006, 5.139613) temps_max = 1800 #soit 30 min intervalle_temps = 300 #soit 5 min #l'API utilise des coordonn\u00e9es avec la longitude avant la latitude coord = [coord_depart[1],coord_depart[0]] body = {\"locations\":[coord], \"range\":[temps_max], \"attributes\":[\"area\"], \"interval\":intervalle_temps, \"location_type\":\"start\", \"range_type\":\"time\" ,\"area_units\":\"m\"} headers = { 'Accept': 'application/json, application/geo+json, application/gpx+xml, img/png; charset=utf-8', 'Authorization': 'yourToken', 'Content-Type': 'application/json; charset=utf-8' } call = requests.post('https://api.openrouteservice.org/v2/isochrones/foot-walking', json=body, headers=headers) print(call.status_code, call.reason) print(call.text) geo=call.text with open('datas.json','w') as f: f.write(geo) with open('datas.json','r') as f: datas=json.load(f) folium_map = folium.Map(location=coord_depart,zoom_start=14) folium.Marker(coord_depart,popup=\"Mairie\").add_to(folium_map) i=0 for zone in datas[\"features\"]: valeur_tps = zone[\"properties\"][\"value\"] print(valeur_tps) path_list=[(y,x) for x,y in zone[\"geometry\"][\"coordinates\"][0]] folium.Polygon(path_list,color=tab_couleurs[i]).add_to(folium_map) i=i+1 folium_map.save('map.appart.html')","title":"II] Utilisation de l'API"},{"location":"TNSI/API_web_eleve/#iii-exercices","text":"R\u00e9aliser les deux exercices suivants sous Jupyter tout en justifiant les parties de code. Rechercher les isochrones autour du lyc\u00e9e situ\u00e9 \u00e0 40 min et par pas de 10 min. Ensuite, utiliser l'API d'une autre mani\u00e8re qu'avec les isochrones.","title":"III] Exercices"},{"location":"TNSI/PHP_SQL/","text":"PHP et SQL I] La base de donn\u00e9es II ] Acc\u00e8s \u00e0 la base de donn\u00e9es try { $bdd = new PDO('mysql:host=localhost:8080;dbname=test;charset=utf8', 'root', ''); } catch(Exception $e) { die('Erreur : '.$e->getMessage()); } III] Passage de la requ\u00eate SQL SQL = 'SELECT nom FROM jeux_video' $reponse = $bdd->query(SQL); IV] Gestion de l'affichage while ($donnees = $reponse->fetch()) { echo $donnees['nom']. '<br />'; } V] Code complet <?php try { $bdd = new PDO('mysql:host=localhost;dbname=test;charset=utf8', 'root', ''); } catch(Exception $e) { die('Erreur : '.$e->getMessage()); } $reponse = $bdd->query('SELECT nom FROM jeux_video'); while ($donnees = $reponse->fetch()) { echo $donnees['nom']. '<br />'; } ?> <?php $reponse->closeCursor(); ?> Remarque : il faut enregistrer le fichier PHP sous htdocs. IV] R\u00e9sultat Super Mario Bros Sonic Zelda : ocarina of time Mario Kart 64 Super Smash Bros Melee Dead or Alive Dead or Alive Xtreme Beach Volley Ball Enter the Matrix Max Payne 2 Yoshi's Island Commandos 3 Final Fantasy X Pokemon Rubis Starcraft Grand Theft Auto 3 Homeworld 2 Aladin Super Mario Bros 3 SSX 3 Star Wars : Jedi outcast Actua Soccer 3 Time Crisis 3 X-FILES Soul Calibur 2 Diablo Street Fighter 2 Gundam Battle Assault 2 Spider-Man Midtown Madness 3 Tetris The Rocketeer Pro Evolution Soccer 3 Ice Hockey Sydney 2000 NBA 2k Aliens Versus Predator : Extinction Crazy Taxi Le Maillon Faible FIFA 64 Qui Veut Gagner Des Millions Monopoly Taxi 3 Indiana Jones Et Le Tombeau De L'Empereur F-ZERO Harry Potter Et La Chambre Des Secrets Half-Life Myst III Exile Wario World Rollercoaster Tycoon Splinter Cell","title":"PHP SQL"},{"location":"TNSI/PHP_SQL/#php-et-sql","text":"","title":"PHP et SQL "},{"location":"TNSI/PHP_SQL/#i-la-base-de-donnees","text":"","title":"I] La base de donn\u00e9es"},{"location":"TNSI/PHP_SQL/#ii-acces-a-la-base-de-donnees","text":"try { $bdd = new PDO('mysql:host=localhost:8080;dbname=test;charset=utf8', 'root', ''); } catch(Exception $e) { die('Erreur : '.$e->getMessage()); }","title":"II ] Acc\u00e8s \u00e0 la base de donn\u00e9es"},{"location":"TNSI/PHP_SQL/#iii-passage-de-la-requete-sql","text":"SQL = 'SELECT nom FROM jeux_video' $reponse = $bdd->query(SQL);","title":"III] Passage de la requ\u00eate SQL"},{"location":"TNSI/PHP_SQL/#iv-gestion-de-laffichage","text":"while ($donnees = $reponse->fetch()) { echo $donnees['nom']. '<br />'; }","title":"IV] Gestion de l'affichage"},{"location":"TNSI/PHP_SQL/#v-code-complet","text":"<?php try { $bdd = new PDO('mysql:host=localhost;dbname=test;charset=utf8', 'root', ''); } catch(Exception $e) { die('Erreur : '.$e->getMessage()); } $reponse = $bdd->query('SELECT nom FROM jeux_video'); while ($donnees = $reponse->fetch()) { echo $donnees['nom']. '<br />'; } ?> <?php $reponse->closeCursor(); ?> Remarque : il faut enregistrer le fichier PHP sous htdocs.","title":"V] Code complet"},{"location":"TNSI/PHP_SQL/#iv-resultat","text":"Super Mario Bros Sonic Zelda : ocarina of time Mario Kart 64 Super Smash Bros Melee Dead or Alive Dead or Alive Xtreme Beach Volley Ball Enter the Matrix Max Payne 2 Yoshi's Island Commandos 3 Final Fantasy X Pokemon Rubis Starcraft Grand Theft Auto 3 Homeworld 2 Aladin Super Mario Bros 3 SSX 3 Star Wars : Jedi outcast Actua Soccer 3 Time Crisis 3 X-FILES Soul Calibur 2 Diablo Street Fighter 2 Gundam Battle Assault 2 Spider-Man Midtown Madness 3 Tetris The Rocketeer Pro Evolution Soccer 3 Ice Hockey Sydney 2000 NBA 2k Aliens Versus Predator : Extinction Crazy Taxi Le Maillon Faible FIFA 64 Qui Veut Gagner Des Millions Monopoly Taxi 3 Indiana Jones Et Le Tombeau De L'Empereur F-ZERO Harry Potter Et La Chambre Des Secrets Half-Life Myst III Exile Wario World Rollercoaster Tycoon Splinter Cell","title":"IV] R\u00e9sultat"}]}